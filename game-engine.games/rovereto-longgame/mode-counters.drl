package eu.trentorise.game.model

rule "update walk counters"
lock-on-active
when
    InputData( $km : data["walkDistance"] != null, $km >= walk-min)
    $c : CustomData($counterKm : this["walk-km"])
    $counterTrips : CustomData(this["walk-trips"])
then
	if($counterKm == null) {
		$c.put("walk-km", (Double) $km);
	} else {
		$c.put("walk-km", (Double) $counterKm + (Double) $km);
	}
	if($counterTrips == null) {
		$c.put("walk-trips", 1);
	} else {
		$c.put("walk-trips", $counterTrips + 1);
	}
    update($c);
end


rule "update bike counters"
lock-on-active
when
    InputData( $km : data["bikeDistance"] != null, $km >= bike-min)
    $c : CustomData($counterKm : this["bike-km"])
    $counterTrips : CustomData(this["bike-trips"])
then
	if($counterKm == null) {
		$c.put("bike-km", (Double) $km);
	} else {
		$c.put("bike-km", (Double) $counterKm + (Double) $km);
	}
	if($counterTrips == null) {
		$c.put("bike-trips", 1);
	} else {
		$c.put("bike-trips", $counterTrips + 1);
	}
    update($c);
end


rule "update bikesharing counters"
lock-on-active
when
    InputData( $km : data["bikeDistance"] != null, data["bikesharing"] == true, $km >= bike-min)
    $c : CustomData($counterKm : this["bikesharing-km"])
    $counterTrips : CustomData(this["bikesharing-trips"])
then
	if($counterKm == null) {
		$c.put("bikesharing-km", (Double) $km);
	} else {
		$c.put("bikesharing-km", (Double) $counterKm + (Double) $km);
	}
	if($counterTrips == null) {
		$c.put("bikesharing-trips", 1);
	} else {
		$c.put("bikesharing-trips", $counterTrips + 1);
	}
    update($c);
end


rule "update bus counters"
lock-on-active
when
    InputData( $km : data["busDistance"] != null)
    $c : CustomData($counterKm : this["bus-km"])
    $counterTrips : CustomData(this["bus-trips"])
then
	if($counterKm == null) {
		$c.put("bus-km", (Double) $km);
	} else {
		$c.put("bus-km", (Double) $counterKm + (Double) $km);
	}
	if($counterTrips == null) {
		$c.put("bus-trips", 1);
	} else {
		$c.put("bus-trips", $counterTrips + 1);
	}
    update($c);
end


rule "update train counters"
lock-on-active
when
    InputData( $km : data["trainDistance"] != null)
    $c : CustomData($counterKm : this["train-km"])
    $counterTrips : CustomData(this["train-trips"])
then
	if($counterKm == null) {
		$c.put("train-km", (Double) $km);
	} else {
		$c.put("train-km", (Double) $counterKm + (Double) $km);
	}
	if($counterTrips == null) {
		$c.put("train-trips", 1);
	} else {
		$c.put("train-trips", $counterTrips + 1);
	}
    update($c);
end

rule "update car counters"
lock-on-active
when
    InputData( $km : data["carDistance"] != null)
    $c : CustomData($counterKm : this["car-km"])
    $counterTrips : CustomData(this["train-trips"])
then
	if($counterKm == null) {
		$c.put("car-km", (Double) $km);
	} else {
		$c.put("car-km", (Double) $counter + (Double) $km);
	}
	if($counterTrips == null) {
		$c.put("car-trips", 1);
	} else {
		$c.put("car-trips", $counterTrips + 1);
	}
    update($c);
end
